Metadata-Version: 2.4
Name: page2vec
Version: 0.1.0
Summary: Convert knowledge base websites into vectors for vector databases
Home-page: https://github.com/yourusername/page2vec
Author: Yasu
Author-email:
License: MIT
Project-URL: Homepage, https://github.com/yourusername/page2vec
Project-URL: Repository, https://github.com/yourusername/page2vec.git
Project-URL: Issues, https://github.com/yourusername/page2vec/issues
Keywords: vector database,embeddings,web scraping,knowledge base,pinecone,chromadb,milvus
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Topic :: Scientific/Engineering :: Artificial Intelligence
Classifier: Topic :: Internet :: WWW/HTTP :: Indexing/Search
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: browser-use>=0.3.0
Requires-Dist: pinecone>=2.2.0
Requires-Dist: chromadb>=1.1.0
Requires-Dist: pymilvus>=2.2.0
Requires-Dist: milvus-model
Requires-Dist: python-dotenv
Provides-Extra: dev
Requires-Dist: pytest; extra == "dev"
Requires-Dist: pytest-asyncio; extra == "dev"
Requires-Dist: black; extra == "dev"
Requires-Dist: flake8; extra == "dev"
Requires-Dist: mypy; extra == "dev"
Dynamic: home-page
Dynamic: license-file
Dynamic: requires-python

## Description

Convert your knowledge base website into a text file that you can store as a vector in any of the existing vector databases.

The databases supported are:

* Pinecone
* ChromaDB
* Milvus

## Installation

### From PyPI (when published)
```bash
pip install page2vec
```

### From Source
```bash
git clone <repository-url>
cd page2vec
pip install -e .
```

### Development Installation
```bash
git clone <repository-url>
cd page2vec
pip install -e ".[dev]"
```

## Example Usage

### Command Line Interface

After installation, you can use the `page2vec` command directly:

**Pinecone**

Update all values with the ones from your account, API key, index name and namespace.

```bash
page2vec \
  --database pinecone \
  --url "[INSERT A URL]"  \
  --pinecone-api-key "[YOUR API KEY]"  \
  --pinecone-index "page2vec-testing" \
  --pinecone-namespace "page2vec-default"
```

**ChromaDB**

```bash
page2vec \
  --url "[INSERT A URL]"  \
  --database chromadb \
  --chromadb-api-key "[YOUR API KEY]"  \
  --chromadb-database-name "page2vec-testing"
```

**Milvus**
```bash
page2vec \
  --url "[INSERT A URL]"  \
  --database milvus \
  --milvus-output-file "milvus_data.db"  \
  --milvus-collection-name "page2vec-testing"
```

### Python API

You can also use page2vec programmatically:

```python
import asyncio
from page2vec import async_main
from argparse import Namespace

# Create arguments
args = Namespace(
    database="pinecone",
    url="https://docs.example.com",
    pinecone_api_key="your-api-key",
    pinecone_index="your-index",
    pinecone_namespace="your-namespace",
    test_mode=False
)

# Run the process
asyncio.run(async_main(args))
```


## Dependencies

This project uses browser-use


# Notes:

These databases will be supported in the future (or upon request):

* PostgreSQL
* Elasticsearch
